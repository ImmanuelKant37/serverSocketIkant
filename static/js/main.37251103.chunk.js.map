{"version":3,"sources":["index.js","models/server.js","../node_modules/express/lib sync","models/sockets.js"],"names":["require","execute","express","https","socketIO","path","Sockets","cors","Server","this","app","port","server","createServer","io","use","static","resolve","__dirname","middlewares","configurarSockets","listen","console","log","module","exports","webpackEmptyContext","req","e","Error","code","keys","id","socketEvents","on","socket"],"mappings":"8GAEe,IAFCA,EAAQ,OAIjBC,S,4ECHDC,EAAWF,EAAQ,KACnBG,EAAYH,EAAQ,KACpBI,EAAWJ,EAAQ,KACnBK,EAAWL,EAAQ,IACnBM,EAAWN,EAAQ,KACnBO,EAAWP,EAAQ,KAEnBQ,E,WAEF,aAAc,oBACVC,KAAKC,IAAMR,IACXO,KAAKE,KAAM,KAGXF,KAAKG,OAAST,EAAMU,aAAaJ,KAAKC,KAGtCD,KAAKK,GAAKV,EAASK,KAAKG,OAAQ,GACnC,C,+CACG,WACIH,KAAKC,IAAIK,IAAIb,EAAQc,OAAOX,EAAKY,QAAQC,EAAW,eAEpDT,KAAKC,IAAIK,IAAIR,IAChB,G,+BACD,WACI,IAAID,EAAQG,KAAKK,GACpB,G,qBACD,WAAU,IAAD,OACLL,KAAKU,cACLV,KAAKW,oBACLX,KAAKG,OAAOS,OAAOZ,KAAKE,MAAM,WAC1BW,QAAQC,IAAI,6BAA8B,EAAKZ,KAClD,GACR,K,KAGLa,EAAOC,QAAUjB,C,sKCrCjB,SAASkB,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBT,QAAUS,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBM,GAAK,G,0TCPnB1B,E,WACF,WAAYQ,GAAI,oBACZL,KAAKK,GAAKA,EACVL,KAAKwB,cAER,C,gDACD,WAEIxB,KAAKK,GAAGoB,GAAG,cAAa,SAACC,GAErBb,QAAQC,IAAI,oBAEf,GACJ,K,KAGLC,EAAOC,QAAUnB,C","file":"static/js/main.37251103.chunk.js","sourcesContent":["const Server =  require('./models/server');\r\n\r\nconst server = new Server();\r\n\r\nserver.execute();\r\n\r\n\r\n","//Servidor de Express\r\nconst express  = require('express');\r\nconst https     = require('https');\r\nconst socketIO = require('socket.io');\r\nconst path     = require('path');\r\nconst Sockets  = require('./sockets');\r\nconst cors     = require('cors');\r\n\r\nclass Server {\r\n\r\n    constructor(){\r\n        this.app = express();\r\n        this.port =8080;\r\n\r\n        //Http Server\r\n        this.server = https.createServer(this.app);\r\n      \r\n        //Configuracion del socket server\r\n        this.io = socketIO(this.server, {/* configuraciones */});\r\n    }\r\n        middlewares(){\r\n            this.app.use(express.static(path.resolve(__dirname, '../public')))\r\n\r\n            this.app.use(cors());\r\n        }\r\n        configurarSockets(){\r\n            new Sockets(this.io);\r\n        }\r\n        execute(){\r\n            this.middlewares();\r\n            this.configurarSockets();\r\n            this.server.listen(this.port, () => {\r\n                console.log('Server abierto en puerto, ', this.port)\r\n            });\r\n    }\r\n}\r\n\r\nmodule.exports = Server;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 282;","\r\nclass Sockets{\r\n    constructor(io){\r\n        this.io = io;\r\n        this.socketEvents();\r\n       \r\n    }\r\n    socketEvents(){\r\n        //On connection\r\n        this.io.on('connection',(socket)=>{\r\n            //Escuchar evento server\r\n            console.log('Cliente conectado')\r\n\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = Sockets;"],"sourceRoot":""}